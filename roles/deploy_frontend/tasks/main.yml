---
- name: Create a k8s namespace
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: ui
        labels:
          name: ui


- name: Create a docker secret 
  shell: kubectl create secret docker-registry regcred -n ui --docker-server=https://index.docker.io/v1/ --docker-username=shubh1612 --docker-password=Myaccount1@ --docker-email=sharma.shubh@husky.neu.edu  
        
- name : create a replica set 
  k8s:
    state : present 
    definition:
      apiVersion: apps/v1
      kind: ReplicaSet
      metadata: 
        name: frontend-replicaset
        labels: 
          app: frontend
        namespace: ui
      spec:
        replicas: 3
        selector:
          matchLabels:
            app: frontend
        template:
          metadata:
            name: frontend
            labels:
              app: frontend
          spec:
            containers:
              - name: frontend
                image: shubh1612/fronta
                imagePullPolicy: Always
                env:
                  - name: REACT_APP_BACKEND_ENDPOINT
                    value: http://backendlb.api:3000
                    # value: "{{backlb.resources[0].status.loadBalancer.ingress[0].hostname}}"
                # resources:
                #   requests:
                #     memory: "128Mi"
                #     cpu: "500m"
                #   limits:
                #     memory: "128Mi"
                #     cpu: "500m"
                ports: 
                  - containerPort: 3000   
                readinessProbe:
                  httpGet:
                    path: /
                    port: 3000
                  initialDelaySeconds: 10
                  periodSeconds: 100
                livenessProbe:
                  httpGet:
                    path: /
                    port: 3000
                  initialDelaySeconds: 10
                  periodSeconds: 100
            imagePullSecrets:
              - name: regcred      
    

                
      
- name: Create a LoadBalancer 
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: load-balancer
        labels:
          name: frontend
        namespace: ui
      spec:
        type: LoadBalancer
        ports:
          - protocol: TCP
            port: 3000
            targetPort: 3000
        selector: 
            app: frontend                            
    





